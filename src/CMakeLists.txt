file(GLOB ProjectFiles RELATIVE ${PROJECT_SOURCE_DIR}/src *.cpp)
foreach( source_file ${ProjectFiles})
    string ( REPLACE ".cpp" "" name ${source_file})
    if (${name} MATCHES "^(km_superk_to_kmer_counts|km_merge_within_partition)$")
        foreach(KMER_BIT IN ITEMS ${KMER_NB_BIT})
            if (KMER_BIT EQUAL 128 AND INT128_FOUND EQUAL 0)
                continue()
            endif()
            foreach(COUNT_BIT IN ITEMS ${COUNT_NB_BIT})
                set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
                set(TARGET_NAME ${name}-bin-${KMER_BIT}-${COUNT_BIT})
                add_executable(${TARGET_NAME} ${source_file})
                add_dependencies(${TARGET_NAME} gatb FMT SDSL LZ4)
                target_compile_definitions(${TARGET_NAME} PRIVATE -DKTYPE=${KMER_BIT} -DCNTYPE=${COUNT_BIT})
                target_include_directories(${TARGET_NAME} PUBLIC ${LZ_INCLUDE})
                target_link_libraries(${TARGET_NAME} gatbcore sdsl fmt ZLIB::ZLIB pthread lz4 ${OPENMP} dl)
                set_target_properties(${TARGET_NAME} PROPERTIES OUTPUT_NAME ${name}-k${KMER_BIT}c${COUNT_BIT})
            endforeach()
        endforeach()
    else()
        set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/bin)
        set(TARGET_NAME ${name}-bin-)
        add_executable(${TARGET_NAME} ${source_file})
        add_dependencies(${TARGET_NAME} gatb FMT SDSL LZ4)
        target_compile_definitions(${TARGET_NAME} PRIVATE -DKTYPE=64 -DCNTYPE=8)
        target_include_directories(${TARGET_NAME} PUBLIC ${LZ_INCLUDE})
        target_link_libraries(${TARGET_NAME} gatbcore sdsl fmt ZLIB::ZLIB pthread lz4 ${OPENMP})
        set_target_properties(${TARGET_NAME} PROPERTIES OUTPUT_NAME ${name})
    endif()
endforeach( source_file ${ProjectFiles})