add_executable(${PROJECT_NAME} kmtricks.cpp cli.cpp utils.cpp)
add_dependencies(${PROJECT_NAME} ${DEPS} SDSL)
target_include_directories(${PROJECT_NAME} PUBLIC ${INCLUDES})
target_compile_definitions(${PROJECT_NAME} PRIVATE DMAX_C=${MAX_C})
target_compile_options(${PROJECT_NAME} PRIVATE -Wall -Wno-reorder -Wno-char-subscripts)

if (WITH_PLUGIN)
  target_compile_definitions(${PROJECT_NAME} PRIVATE WITH_PLUGIN)
endif()

if (WITH_HOWDE)
  target_link_libraries(${PROJECT_NAME} howdesbt roaring)
  target_compile_definitions(${PROJECT_NAME} PRIVATE WITH_HOWDE)
endif()

if (WITH_MODULES)
  target_compile_definitions(${PROJECT_NAME} PRIVATE WITH_KM_MODULES)
endif()

if (NOT APPLE)
  target_link_options(${PROJECT_NAME} PUBLIC -export-dynamic)
  if (STATIC)
    target_link_options(${PROJECT_NAME} PUBLIC -static)
  endif()
endif()

if (CMAKE_BUILD_TYPE STREQUAL "Debug" AND CONDA_BUILD)
  add_executable(${PROJECT_NAME}-debug kmtricks.cpp cli.cpp utils.cpp)
  add_dependencies(${PROJECT_NAME}-debug ${DEPS} SDSL)
  target_include_directories(${PROJECT_NAME}-debug PUBLIC ${INCLUDES})
  target_compile_definitions(${PROJECT_NAME}-debug PRIVATE DMAX_C=${MAX_C})

  if (WITH_HOWDE)
    target_link_libraries(${PROJECT_NAME}-debug howdesbt roaring)
    target_compile_definitions(${PROJECT_NAME}-debug PRIVATE WITH_HOWDE)
  endif()

  if (WITH_MODULES)
    target_compile_definitions(${PROJECT_NAME}-debug PRIVATE WITH_KM_MODULES)
  endif()

  if (NOT APPLE)
    target_link_options(${PROJECT_NAME}-debug PUBLIC -export-dynamic)
    if (STATIC)
      target_link_options(${PROJECT_NAME}-debug PUBLIC -static)
    endif()
  endif()
endif()

if (WITH_SOCKS AND WITH_HOWDE)
  add_executable(${PROJECT_NAME}-socks kmtricks-socks.cpp utils.cpp socks_utils.cpp)
  add_dependencies(${PROJECT_NAME}-socks ${DEPS} SDSL)
  target_include_directories(${PROJECT_NAME}-socks PUBLIC ${INCLUDES})
  target_compile_definitions(${PROJECT_NAME}-socks PRIVATE DMAX_K=${MAX_K} DMAX_C=${MAX_C})
  if (STATIC AND NOT APPLE)
    target_link_options(${PROJECT_NAME}-socks PUBLIC -static)
  endif()
  target_link_libraries(${PROJECT_NAME}-socks howdesbt roaring)
  target_compile_definitions(${PROJECT_NAME}-socks PRIVATE WITH_HOWDE)
endif()


